@charset 'UTF-8';

// Utilities
//
// Reusable functions, mixins, and helper classes.  Things like colors, vertical rhythm, and the .clear-fix helper are in this group.
// > This directory of partials is also important because weâ€™ll need to define global classes, mixins and styles that can be used anywhere and at any time.
// >
// >\- http://www.smashingmagazine.com/2013/08/other-interface-atomic-design-sass/
//
// Styleguide I.0
@import
// Sass Functions
//
// Functions you can call in Sass that will help with various things.
//
// Styleguide I.1
  'utilities/stripUnits',
  'utilities/pxToRem',
  'utilities/pxToEm',
  'utilities/remToEm',
  'utilities/sqrt',
  'utilities/pow',
  'utilities/aspect-ratio'
  ;

// Settings
//
// Global settings and variables. This defines global site wide things like
// colors and fonts.
//
// Styleguide 1.0
@import
  'settings/spacing',
  'settings/colors',
  'settings/fonts',
  'settings/transitions',
  'settings/type-scale'
  ;

@import
// Sass Mixins
//
// Helpful mixins for complex queries and properties.
//
// Styleguide I.2
  'utilities/quantity-query',
  'utilities/media-queries',

// global styles
  'utilities/clear-fix',
  'utilities/grid',
  'utilities/visuallyhidden',
  'utilities/animations',
  'utilities/resets'
  ;

// Quarks
//
// Element level styles meant to apply globally.  These define what elements look like if no class is applied to them.  Effectively our site specific _normalize.css_.
// > Note that these files contain only the default styles for these elements, not modified elements. For example, if we have a table that looks and works entirely differently from the default tables used throughout the website, it would not be a quark.
// >
// >\- http://www.smashingmagazine.com/2013/08/other-interface-atomic-design-sass/
//
// Styleguide 2.0
@import
  'quarks/body',
  'quarks/typography',
  'quarks/links',
  'quarks/img',
  'quarks/hr',
  'quarks/blockquote',
  'quarks/table'
  ;


// Atoms
//
// These are the smallest level of styles that merit a class.  Examples are buttons, icons, and text variations like disclaimers.
// > The styles in an atom should almost never be attached to an HTML element itself; we might not be able to guarantee what the markup will look like in the future. Specifying a class instead is always safer.
// >
// >\- http://www.smashingmagazine.com/2013/08/other-interface-atomic-design-sass/
//
// Styleguide 3.0
@import
  'atoms/canvas-halftone',
  'atoms/pull-quote'
  ;

// Molecules
//
// Structures which combine multiple elements to create a coherent piece. A masthead with an image and headline, or a nav dropdown containing numerous links, for example.
// > This is where we can combine multiple quarks and atoms, without interfering with any of our global styles.
// >
// >\- http://www.smashingmagazine.com/2013/08/other-interface-atomic-design-sass/
//
// Styleguide 4.0
@import
  'molecules/halftone'
  ;


// Organisms
//
// These are big things that combine everything smaller.  An entire form containing molecules of labels with inputs, or the global site header, for example.
// > Organisms are groups of molecules joined together to form a relatively complex, distinct section of an interface.
// >
// >\- http://bradfrost.com/blog/post/atomic-web-design/#organisms
//
// Styleguide 5.0
// @import
//   ;

// Page
//
// Huge scale layout things
@import
  'page/global-container',
  'page/article'
  ;


.dev-grid {
  position: absolute;
  top: 0; right: -1 * $wr; bottom: 0; left: -1 * $wr;
  pointer-events: none;
  @include gridContainer;
}
.dev-grid__column {
  background: rgba(red,.05);
  @include colspan (1);
  height: 100%;
  // @include mq-lt ($bp-medium) {
  //   @include colspan (1,6);
  //   &:nth-child(7), &:nth-child(7) ~ & {
  //     display: none;
  //   }
  // }
}
