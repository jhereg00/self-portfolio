@import url(https://fonts.googleapis.com/css?family=Poppins:600|Oxygen:400,700);
.clear-fix::after, .article__inner::after, .dev-grid::after {
	content: '';
	display: table;
	clear: both; }

/*
* Hide only visually, but have it available for screen readers:
* http://snook.ca/archives/html_and_css/hiding-content-for-accessibility
*/
.visuallyhidden {
	border: 0;
	clip: rect(0 0 0 0);
	height: 1px;
	margin: -1px;
	overflow: hidden;
	padding: 0;
	position: absolute;
	width: 1px;
	/*
  * Extends the .visuallyhidden class to allow the element
  * to be focusable when navigated to via the keyboard:
  * https://www.drupal.org/node/897638
  */ }
	.visuallyhidden.focusable:focus, .visuallyhidden.focusable:active {
		clip: auto;
		height: auto;
		margin: 0;
		overflow: visible;
		position: static;
		width: auto; }

*, *::before, *::after {
	box-sizing: inherit; }

body {
	font-family: "Oxygen", "Helvetica", "Arial", sans-serif;
	letter-spacing: .025em;
	font-size: 1.125rem;
	line-height: 1.875rem;
	margin: 0;
	padding: 0;
	background: #003539;
	color: #fff; }

h1, .h1 {
	font-size: 5.125rem;
	line-height: 5.625rem;
	font-family: "Poppins", sans-serif;
	letter-spacing: .01em;
	-webkit-font-smoothing: antialiased;
	font-weight: normal;
	margin: 2.8125rem auto 0.9375rem; }

h2, .h2 {
	font-size: 3.0625rem;
	line-height: 3.75rem;
	margin: 1.875rem auto 1.875rem;
	font-weight: 700; }

h3, .h3 {
	font-size: 1.875rem;
	line-height: 2.8125rem;
	margin: 0.9375rem auto;
	font-weight: 700; }

h4, .h4 {
	font-size: 1.5rem;
	line-height: 1.875rem;
	margin: 0.9375rem auto;
	font-weight: 700; }

p {
	margin: 0.9375rem auto; }
	p .h1, p .h2, p .h3, p .h4 {
		display: inline;
		vertical-align: middle; }

a {
	color: #046c6f;
	transition: color 0.3s;
	text-decoration: none;
	font-weight: 700; }
	a:hover {
		color: #08adff; }

@supports (-webkit-background-clip: text) {
	p a {
		display: inline-block;
		background: linear-gradient(45deg, #08adff, #08adff 40%, #046c6f 60%);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-size: 300% 500%;
		background-position: right center;
		transition: background-position 0.6s; }
		p a:hover {
			background-position: left center; } }

img {
	display: inline-block;
	max-width: 100%;
	border: none; }
	.section-main__content img {
		display: block;
		margin: 2.8125rem auto; }

hr {
	display: block;
	width: auto;
	margin: 2.8125rem 2.8125rem;
	border: none;
	height: 1px;
	background: #fff; }
	@media only screen and (min-width: 60em) {
		hr {
			margin: 2.8125rem 5.625rem; } }

blockquote {
	margin: 0.9375rem 0;
	padding: 0; }

table {
	display: table;
	width: 100%;
	box-sizing: border-box;
	border-collapse: collapse; }

tr {
	border-top: 1px solid #707070;
	border-bottom: 1px solid #707070; }

th, td {
	text-align: left;
	padding: 0.46875rem 0.9375rem;
	vertical-align: top; }
	@media only screen and (max-width: 59.99em) {
		th, td {
			display: block; } }

.canvas-halftone {
	position: absolute;
	top: 50%;
	left: 50%;
	-webkit-transform: translate(-50%, -50%);
	        transform: translate(-50%, -50%); }

.halftone {
	padding: 3.75rem; }
	.halftone, .halftone > :not(.canvas-halftone) {
		position: relative;
		z-index: 1; }
	.halftone .canvas-halftone {
		-webkit-filter: drop-shadow(1px 1.5px 0 #011c1f);
		        filter: drop-shadow(1px 1.5px 0 #011c1f); }

.global-container {
	overflow: hidden; }

.article {
	position: relative;
	color: #333333;
	padding-top: 50vh;
	max-width: 105rem;
	margin: 3.75rem auto;
	-webkit-animation: margin-top-away 3s forwards;
	        animation: margin-top-away 3s forwards; }
	.article::before {
		content: '';
		position: absolute;
		top: 50vh;
		bottom: 0;
		left: -2rem;
		z-index: 1;
		width: 6.75rem;
		background: #f0f0f0;
		box-shadow: 6px 8px 0 #011c1f; }
		@media only screen and (min-width: 75em) {
			.article::before {
				width: 10.5rem; } }
		@media only screen and (min-width: 105em) {
			.article::before {
				left: -999rem;
				right: 100%;
				margin-right: -9.375rem;
				width: auto; } }
	.article::after {
		position: absolute;
		top: calc(50vh + 2.8125rem);
		bottom: 0;
		right: 0;
		left: calc(100% - 4.6875rem);
		z-index: 1;
		background: #f0f0f0;
		box-shadow: 6px 8px 0 #011c1f;
		-webkit-clip-path: polygon(calc((100vw - 7.5rem) / 12) 0, 100% 0, 100% 100%, 0 100%, 0 calc((100vw - 7.5rem) / 12));
		        clip-path: polygon(calc((100vw - 7.5rem) / 12) 0, 100% 0, 100% 100%, 0 100%, 0 calc((100vw - 7.5rem) / 12)); }
		@media only screen and (min-width: 60em) {
			.article::after {
				content: ''; } }
		@media only screen and (min-width: 75em) {
			.article::after {
				left: calc(100% - 7.5rem); } }
		@media only screen and (min-width: 105em) {
			.article::after {
				right: -999rem;
				-webkit-clip-path: polygon(8.125rem 0, 100% 0, 100% 100%, 0 100%, 0 8.125rem);
				        clip-path: polygon(8.125rem 0, 100% 0, 100% 100%, 0 100%, 0 8.125rem); } }

.article__header {
	position: absolute;
	top: 0;
	right: 0;
	left: 0;
	height: calc(50vh + 6.5625rem);
	z-index: 0;
	-webkit-filter: drop-shadow(3px 4px 0 #011c1f);
	        filter: drop-shadow(3px 4px 0 #011c1f);
	background: #046c6f center center no-repeat;
	background-size: cover; }
	.article__header canvas {
		position: absolute;
		top: 50%;
		left: 50%;
		-webkit-transform: translate(-50%, -50%);
		        transform: translate(-50%, -50%); }
	@media only screen and (min-width: 105em) {
		.article__header {
			right: auto;
			left: 50%;
			width: 100vw;
			-webkit-transform: translateX(-50%);
			        transform: translateX(-50%); } }

.article__inner {
	position: relative;
	margin: 0 0.9375rem;
	padding: 2.8125rem 0;
	min-height: 100vh;
	z-index: 2;
	-webkit-filter: drop-shadow(6px 8px 0 #011c1f);
	        filter: drop-shadow(6px 8px 0 #011c1f); }
	.article__inner h1, .article__inner h2, .article__inner h3, .article__inner h4, .article__inner h5 {
		color: #003539;
		text-shadow: 3px 3px 0 #011c1f; }
	.article__inner::before {
		content: '';
		position: absolute;
		top: 0;
		bottom: 0;
		left: 0;
		right: -0.9375rem;
		background: #f0f0f0;
		-webkit-clip-path: polygon(0 0, 90.90909% 0, 100% calc((100vw - 7.5rem) / 12), 100% 100%, 0 100%);
		        clip-path: polygon(0 0, 90.90909% 0, 100% calc((100vw - 7.5rem) / 12), 100% 100%, 0 100%); }
		@media only screen and (min-width: 60em) {
			.article__inner::before {
				right: 8.33333%; } }
		@media only screen and (min-width: 105em) {
			.article__inner::before {
				-webkit-clip-path: polygon(0 0, 90.90909% 0, 100% 8.125rem, 100% 100%, 0 100%);
				        clip-path: polygon(0 0, 90.90909% 0, 100% 8.125rem, 100% 100%, 0 100%); } }
	.article__inner > h1:first-child {
		box-sizing: border-box;
		float: left;
		width: 91.66667%;
		margin-left: 0;
		margin-right: 0;
		position: relative;
		margin-top: -8.4375rem;
		min-height: 9.375rem;
		padding: 1.875rem 0.9375rem 0;
		background: #f0f0f0 linear-gradient(to bottom, #fff 5.625rem, transparent 100%); }
		.article__inner > h1:first-child::after {
			content: '';
			position: absolute;
			top: 5.625rem;
			right: -3px;
			bottom: 0;
			width: 3px;
			background: linear-gradient(to bottom, #011c1f, transparent);
			opacity: .25;
			-webkit-clip-path: polygon(0 0, 100% 0, 0 100%);
			        clip-path: polygon(0 0, 100% 0, 0 100%); }
		@media only screen and (min-width: 45em) {
			.article__inner > h1:first-child {
				box-sizing: border-box;
				float: left;
				width: 66.66667%;
				margin-left: 0;
				margin-right: 0;
				margin-left: 25%; } }
		@media only screen and (min-width: 60em) {
			.article__inner > h1:first-child {
				box-sizing: border-box;
				float: left;
				width: 50%;
				margin-left: 0;
				margin-right: 0;
				margin-left: 33.33333%; } }
	@media only screen and (min-width: 60em) {
		.article__inner {
			margin: 0 4.6875rem; } }
	@media only screen and (min-width: 75em) {
		.article__inner {
			margin-left: 7.5rem;
			margin-right: 7.5rem; } }

.article__content {
	box-sizing: border-box;
	float: left;
	width: calc(100% - 1.875rem);
	margin-left: 0.9375rem;
	margin-right: 0.9375rem;
	position: relative; }
	@media only screen and (min-width: 45em) {
		.article__content {
			box-sizing: border-box;
			float: left;
			width: calc(66.66667% - 1.875rem);
			margin-left: 0.9375rem;
			margin-right: 0.9375rem;
			margin-left: calc(16.66667% + 0.9375rem); } }
	@media only screen and (min-width: 75em) {
		.article__content {
			box-sizing: border-box;
			float: left;
			width: calc(50% - 1.875rem);
			margin-left: 0.9375rem;
			margin-right: 0.9375rem;
			margin-left: calc(25% + 0.9375rem); } }

.article__content .left, .breakout-left {
	background: #ccc;
	margin-left: -0.9375rem; }
	@media only screen and (min-width: 45em) {
		.article__content .left, .breakout-left {
			margin-left: calc(-25% - 0.46875rem); } }
	@media only screen and (min-width: 60em) {
		.article__content .left, .breakout-left {
			margin-left: calc(-12.5% - 0.23438rem); } }
	@media only screen and (min-width: 75em) {
		.article__content .left, .breakout-left {
			margin-left: calc(-16.66667% - 0.3125rem); } }

.article__content .right, .breakout-right {
	background: #ccc;
	margin-right: -0.9375rem; }
	@media only screen and (min-width: 45em) {
		.article__content .right, .breakout-right {
			margin-right: calc(-25% - 0.46875rem); } }
	@media only screen and (min-width: 60em) {
		.article__content .right, .breakout-right {
			margin-right: 0; } }
	@media only screen and (min-width: 75em) {
		.article__content .right, .breakout-right {
			margin-right: calc(-16.66667% - 0.3125rem); } }

@media only screen and (min-width: 45em) {
	.article__content .left {
		float: left;
		width: calc(62.5% - 0.70313rem);
		margin-right: 1.875rem; } }

@media only screen and (min-width: 75em) {
	.article__content .left {
		width: calc(66.66667% - 0.625rem); } }

@media only screen and (min-width: 45em) {
	.article__content .right {
		float: right;
		width: calc(62.5% - 0.70313rem);
		margin-left: 1.875rem; } }

@media only screen and (min-width: 60em) {
	.article__content .right {
		width: calc(50% - 0.9375rem); } }

@media only screen and (min-width: 75em) {
	.article__content .right {
		width: calc(66.66667% - 0.625rem); } }

.dev-grid {
	position: absolute;
	top: 0;
	right: -0.9375rem;
	bottom: 0;
	left: -0.9375rem;
	pointer-events: none;
	margin-left: auto;
	margin-right: auto;
	padding-left: 0.9375rem;
	padding-right: 0.9375rem; }

.dev-grid__column {
	background: rgba(255, 0, 0, 0.05);
	box-sizing: border-box;
	float: left;
	width: calc(8.33333% - 1.875rem);
	margin-left: 0.9375rem;
	margin-right: 0.9375rem;
	height: 100%; }

/*# sourceMappingURL=data:application/json;base64, */
